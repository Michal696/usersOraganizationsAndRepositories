[{"C:\\Users\\I516366\\private\\inquol\\my-app\\src\\index.tsx":"1","C:\\Users\\I516366\\private\\inquol\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\I516366\\private\\inquol\\my-app\\src\\App.tsx":"3","C:\\Users\\I516366\\private\\inquol\\my-app\\src\\github-api.ts":"4","C:\\Users\\I516366\\private\\inquol\\my-app\\src\\components\\navbar.component.tsx":"5","C:\\Users\\I516366\\private\\inquol\\my-app\\src\\components\\inputpage.component.tsx":"6","C:\\Users\\I516366\\private\\inquol\\my-app\\src\\components\\repositories.component.tsx":"7","C:\\Users\\I516366\\private\\inquol\\my-app\\src\\components\\organizations.component.tsx":"8"},{"size":662,"mtime":1607702862713,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":750,"mtime":1607772993137,"results":"12","hashOfConfig":"10"},{"size":714,"mtime":1607764979476,"results":"13","hashOfConfig":"10"},{"size":1286,"mtime":1607772993146,"results":"14","hashOfConfig":"10"},{"size":1074,"mtime":1607771775091,"results":"15","hashOfConfig":"10"},{"size":2581,"mtime":1607773291658,"results":"16","hashOfConfig":"10"},{"size":233,"mtime":1607769276160,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"1mb32iv",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"21"},"C:\\Users\\I516366\\private\\inquol\\my-app\\src\\index.tsx",["38"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ConnectedRouter } from 'connected-react-router';\nimport reportWebVitals from './reportWebVitals';\n\n// Get the application-wide store instance, prepopulating with state from the server where available.\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["39","40"],"C:\\Users\\I516366\\private\\inquol\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\I516366\\private\\inquol\\my-app\\src\\App.tsx",[],"C:\\Users\\I516366\\private\\inquol\\my-app\\src\\github-api.ts",[],"C:\\Users\\I516366\\private\\inquol\\my-app\\src\\components\\navbar.component.tsx",["41"],"import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport InputPageComponent from './inputpage.component';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      root: {\r\n        flexGrow: 1,\r\n      },\r\n      menuButton: {\r\n        marginRight: theme.spacing(2),\r\n      },\r\n      title: {\r\n        flexGrow: 1,\r\n      },\r\n    }),\r\n);\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Repository Search\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {/*<InputPageComponent/>*/}\r\n      </div>\r\n  );\r\n}","C:\\Users\\I516366\\private\\inquol\\my-app\\src\\components\\inputpage.component.tsx",[],"C:\\Users\\I516366\\private\\inquol\\my-app\\src\\components\\repositories.component.tsx",[],"C:\\Users\\I516366\\private\\inquol\\my-app\\src\\components\\organizations.component.tsx",["42"],"import * as React from 'react';\r\nimport {Component} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nexport default class NavbarComponent extends Component {\r\n  public render() {\r\n    return (\r\n        ''\r\n    )\r\n  }\r\n}\r\n",{"ruleId":"43","severity":1,"message":"44","line":5,"column":10,"nodeType":"45","messageId":"46","endLine":5,"endColumn":25},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"43","severity":1,"message":"51","line":6,"column":8,"nodeType":"45","messageId":"46","endLine":6,"endColumn":14},{"ruleId":"43","severity":1,"message":"52","line":1,"column":13,"nodeType":"45","messageId":"46","endLine":1,"endColumn":18},"@typescript-eslint/no-unused-vars","'ConnectedRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["53"],"no-negated-in-lhs",["54"],"'Button' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]